name: 'Deploy REST API'

on:
  workflow_dispatch:
    inputs:
      app_version:
        description: 'App Version ex:1.0.0'
        required: true
        default: 1.0.0
      skip_docker:
        description: 'Skip docker build'
        required: true
        default: 'false'

permissions:
  contents: read

jobs:
  docker:
    name: 'Build Docker'
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      if: ${{ github.event.inputs.skip_docker  == 'false' }}
      uses: docker/setup-buildx-action@v3
    
    - name: Configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Build Docker
      if: ${{ github.event.inputs.skip_docker  == 'false' }}
      uses: docker/build-push-action@v6
      with:
        push: false
        context: ./app
        file: ./app/Dockerfile
        platforms: linux/amd64
        tags: rest-api-flask:${{ github.event.inputs.app_version }}
        outputs: type=docker
    
    - name: Push to ECR
      if: ${{ github.event.inputs.skip_docker  == 'false' }}
      id: ecr
      uses: jwalton/gh-ecr-push@v2
      with:
        access-key-id:  ${{ secrets.AWS_ACCESS_KEY }}
        secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        region: us-east-1
        image: rest-api-flask:${{ github.event.inputs.app_version }}

    - name: Generate Kubeconfig
      run: |
        aws eks update-kubeconfig --name eks-sre1 --region us-east-1 --kubeconfig kubeconfig
        cat kubeconfig
    - name: Apply Argo Application
      uses: koslib/helm-eks-action@master
      with:
        command: |
          cat <<EOF | kubectl apply --kubeconfig ./kubeconfig -f -
            apiVersion: argoproj.io/v1alpha1
            kind: Application
            metadata:
              name: user-app
              namespace: argocd
            spec:
              destination:
                namespace: app
                server: 
              project: default
              source:
                helm:
                  parameters:
                    - name: image.repository
                      value: 114368227931.dkr.ecr.us-east-1.amazonaws.com/rest-api-flask
                    - name: image.tag
                      value: ${{ github.event.inputs.app_version }}
                chart: user-app
                repoURL: https://github.com/freytagmarcos/test-case-modernization/helm-charts/application
                targetRevision: 1.0.0
              syncPolicy:
                retry:
                  backoff:
                    duration: 5s
                    factor: 2
                    maxDuration: 3m0s
                  limit: 5
                automated:
                  prune: true
                  selfHeal: true
                syncOptions:
                - CreateNamespace=true
          EOF
